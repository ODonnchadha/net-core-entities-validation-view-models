{"version":3,"sources":["./client/app/app.component.ts","./client/app/app.component.html","./client/app/services/DataService.ts","./client/main.ts","./client/environments/environment.ts","./client/app/app.module.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from './services/DataService';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ITimeBillViewModel } from './viewModels/ITimeBillViewModel';\r\n\n@Component({\n  selector: 'theApp',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n}) \nexport class AppComponent implements OnInit {\n  theForm: FormGroup;\n  employee: string = \"Shawn Wildermuth\";\n  employeeId: number = 1;\n  message: string = \"\";\n  cases = [\n    {\n      id: 1,\n      fileNumber: \"12345\",\n      client: \"Jones, M.\"\n    },\n    {\n      id: 2,\n      fileNumber: \"1235\",\n      client: \"Smith, J.\"\n    },\n  ];\n\n  constructor(private _formBldr: FormBuilder, private _dataService: DataService) {\n  }\n\n  /*\n   * Building the form. Angular allows validators here.\n  */ \n  ngOnInit(): void {\n    this.theForm = this._formBldr.group({\n      caseId: [\"\", Validators.required],\n      workDate: [new Date()],\n      timeSegments: [0, [Validators.required, Validators.max(72)]],\n      rate: [120.00, [Validators.required, Validators.min(85), Validators.max(1000)]],\n      workDescription: [\"\", [Validators.required, Validators.maxLength(4000), Validators.minLength(25)]]\n    });\n  }\n\n  save() {\n    let timeBill: ITimeBillViewModel = this.theForm.value;\n    timeBill.employeeId = this.employeeId;\n    this._dataService.saveTimesheet(timeBill);\n    this.message = \"Saved...\";\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-6 offset-3\">\n    <h3>Add Timesheet</h3>\n    <div class=\"alert alert-secondary\" *ngIf=\"message\">\n      {{ message}}\n    </div>\n\n    <div>For: {{ employee }}</div>\n\n    <form novalidate (ngSubmit)=\"save()\" [formGroup]=\"theForm\">\n      <p>\n        Form Status: {{ theForm.status }}\n      </p>\n      <div class=\"form-group\">\n        <label>Case: </label>\n        <select class=\"form-control\" name=\"caseId\" formControlName=\"caseId\">\n          <option *ngFor=\"let case of cases\" [value]=\"case.id\">{{ case.client }}: {{ case.fileNumber }}</option>\n        </select>\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.caseId.invalid\">\n          <span *ngIf=\"theForm.controls.caseId.errors.required\">Required</span>\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <label>Date:</label>\n        <input class=\"form-control\" name=\"workDate\" formControlName=\"workDate\" />\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.workDate.invalid\">\n          <span *ngIf=\"theForm.controls.workDate.errors.required\">Required</span>\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <label>Time Segments (6 minute segments):</label>\n        <input class=\"form-control\" name=\"timeSegments\" formControlName=\"timeSegments\" />\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.timeSegments.invalid\">\n          <span *ngIf=\"theForm.controls.timeSegments.errors.required\">Required</span>\n          <span *ngIf=\"theForm.controls.timeSegments.errors.min\">Too low</span>\n          <span *ngIf=\"theForm.controls.timeSegments.errors.max\">Far too high</span>\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <label>Rate (in USD):</label>\n        <input class=\"form-control\" name=\"rate\" formControlName=\"rate\" />\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.rate.invalid\">\n          <span *ngIf=\"theForm.controls.rate.errors.required\">Required</span>\n          <span *ngIf=\"theForm.controls.rate.errors.min\">Too low</span>\n          <span *ngIf=\"theForm.controls.rate.errors.max\">Far too high</span>\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <label>Work Performed:</label>\n        <textarea class=\"form-control\" rows=\"3\" formControlName=\"workDescription\" name=\"workDescription\"></textarea>\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.workDescription.invalid\">\n          <span *ngIf=\"theForm.controls.workDescription.errors.required\">Required</span>\n          <span *ngIf=\"theForm.controls.workDescription.errors.minlength\">Too short</span>\n          <span *ngIf=\"theForm.controls.workDescription.errors.maxlength\">Far too long</span>\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <a href=\"/\" class=\"btn btn-secondary\">Cancel</a>\n        <button type=\"submit\" class=\"btn btn-success\">Add Time Bill</button>\n      </div>\n    </form>\n\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  _baseUrl: string = \"/\"; \n\n  saveTimesheet(timeBill) {\n    return true;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { DataService } from './services/DataService';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n//    HttpClientModule\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}